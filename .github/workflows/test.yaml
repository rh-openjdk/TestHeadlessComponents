name: "test"

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"
env:
  jdkver_latest: 21
  WORKSPACE: /home/runner/workspace

jobs:
  test-linux-sdk:
    name: "Linux jdk"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        jdkconf:
          - JDK 8
          - JDK 11
          - JDK 17
          - JDK Latest
        include:
          - jdkconf: JDK 8
            jdkver: "8"
          - jdkconf: JDK 11
            jdkver: "11"
          - jdkconf: JDK 17
            jdkver: "17"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdkver || env.jdkver_latest }}
      - name: Run
        run: | 
          export OJDK_VERSION_NUMBER=${{ matrix.jdkver || env.jdkver_latest }} BOOTJDK_DIR=~/bootjdk JREJDK="jdk" XDISPLAY=":0" 
          ./testHeadlessComponents.sh
      - name: Pack results
        if: ${{ always() }}
        run: |
          tar -cf "results-linux-jdk${{ matrix.jdkver || env.jdkver_latest }}.tar.gz" $WORKSPACE/testHeadlessComponent.log $WORKSPACE/testHeadlessComponent.jtr.xml
      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          path: "results-linux-jdk${{ matrix.jdkver || env.jdkver_latest }}.tar.gz"
        continue-on-error: true
        
  test-linux-jre:
    name: "Linux jre"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        jdkconf:
          - JDK 8
          - JDK 11
          - JDK 17
          - JDK Latest
        include:
          - jdkconf: JDK 8
            jdkver: "8"
          - jdkconf: JDK 11
            jdkver: "11"
          - jdkconf: JDK 17
            jdkver: "17"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdkver || env.jdkver_latest }}
      - name: Run
        run: | 
          export OJDK_VERSION_NUMBER=${{ matrix.jdkver || env.jdkver_latest }} BOOTJDK_DIR=~/bootjdk JREJDK="jre" XDISPLAY=":0"
          ./testHeadlessComponents.sh
      - name: Pack results
        if: ${{ always() }}
        run: |
          tar -cf "results-linux-jre${{ matrix.jdkver || env.jdkver_latest }}.tar.gz" $WORKSPACE/testHeadlessComponent.log $WORKSPACE/testHeadlessComponent.jtr.xml
      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          path: "results-linux-jre${{ matrix.jdkver || env.jdkver_latest }}.tar.gz"
        continue-on-error: true

  test-windows-jre:
    name: "Windows-jre"
    runs-on: "windows-latest"
    strategy:
      fail-fast: false
      matrix:
        jdkconf:
          - JDK 8
          - JDK 11
          - JDK 17
          - JDK Latest
        include:
          - jdkconf: JDK 8
            jdkver: "8"
          - jdkconf: JDK 11
            jdkver: "11"
          - jdkconf: JDK 17
            jdkver: "17"
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: wget tar git unzip

      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdkver || env.jdkver_latest }}
      - name: Run
        shell: msys2 {0}
        run: | 
          export OJDK_VERSION_NUMBER=${{ matrix.jdkver || env.jdkver_latest }} BOOTJDK_DIR=~/bootjdk JREJDK="jre" XDISPLAY=":0"
          ./testHeadlessComponents.sh
      - name: Pack results
        if: ${{ always() }}
        shell: msys2 {0}
        run: |
          tar -cf "results-windows-jre${{ matrix.jdkver || env.jdkver_latest }}.tar.gz" $WORKSPACE/testHeadlessComponent.log $WORKSPACE/testHeadlessComponent.jtr.xml
      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          path: "results-windows-jre${{ matrix.jdkver || env.jdkver_latest }}.tar.gz"
        continue-on-error: true

  test-windows-jdk:
    name: "Windows-jdk"
    runs-on: "windows-latest"
    strategy:
      fail-fast: false
      matrix:
        jdkconf:
          - JDK 8
          - JDK 11
          - JDK 17
          - JDK Latest
        include:
          - jdkconf: JDK 8
            jdkver: "8"
          - jdkconf: JDK 11
            jdkver: "11"
          - jdkconf: JDK 17
            jdkver: "17"
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: wget tar git unzip

      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdkver || env.jdkver_latest }}
      - name: Run
        shell: msys2 {0}
        run: | 
          export OJDK_VERSION_NUMBER=${{ matrix.jdkver || env.jdkver_latest }} BOOTJDK_DIR=~/bootjdk JREJDK="jre" XDISPLAY=":0"
          ./testHeadlessComponents.sh
      - name: Pack results
        if: ${{ always() }}
        shell: msys2 {0}
        run: |
          tar -cf "results-windows-jdk${{ matrix.jdkver || env.jdkver_latest }}.tar.gz" $WORKSPACE/testHeadlessComponent.log $WORKSPACE/testHeadlessComponent.jtr.xml
      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          path: "results-windows-jdk${{ matrix.jdkver || env.jdkver_latest }}.tar.gz"
        continue-on-error: true
          
  test-macos-jre:
    name: "MacOS-jre"
    runs-on: "macos-latest"
    strategy:
      fail-fast: false
      matrix:
        jdkconf:
          - JDK 8
          - JDK 11
          - JDK 17
          - JDK Latest
        include:
          - jdkconf: JDK 8
            jdkver: "8"
          - jdkconf: JDK 11
            jdkver: "11"
          - jdkconf: JDK 17
            jdkver: "17"
    steps:
      - uses: actions/checkout@v3
      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval $(/usr/local/bin/brew shellenv)' >> $HOME/.zprofile
          eval $(/usr/local/bin/brew shellenv)
  
      - name: Install Bash with Homebrew
        run: brew install bash
  
      - name: Update Shell Configuration
        run: echo 'export PATH="/usr/local/bin:$PATH"' >> $HOME/.zprofile && exec -l $SHELL
  
      - name: Verify Bash Version
        run: /usr/local/bin/bash --version

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdkver || env.jdkver_latest }}
      - name: Run
        run: | 
          export OJDK_VERSION_NUMBER=${{ matrix.jdkver || env.jdkver_latest }} BOOTJDK_DIR=~/bootjdk JREJDK="jre" WORKSPACE=/Users/runner/workspace XDISPLAY=":0"
          /usr/local/bin/bash testHeadlessComponents.sh
      - name: Pack results
        if: ${{ always() }}
        run: |
          export WORKSPACE=/Users/runner/workspace
          tar -cf "results-macos-jre${{ matrix.jdkver || env.jdkver_latest }}.tar.gz" $WORKSPACE/testHeadlessComponent.log $WORKSPACE/testHeadlessComponent.jtr.xml
      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          path: "results-macos-jre${{ matrix.jdkver || env.jdkver_latest }}.tar.gz"
        continue-on-error: true

  test-macos-jdk:
    name: "MacOS-jdk"
    runs-on: "macos-latest"
    env:
      WORKSPACE: /home/runner/workspace
    strategy:
      fail-fast: false
      matrix:
        jdkconf:
          - JDK 8
          - JDK 11
          - JDK 17
          - JDK Latest
        include:
          - jdkconf: JDK 8
            jdkver: "8"
          - jdkconf: JDK 11
            jdkver: "11"
          - jdkconf: JDK 17
            jdkver: "17"
    steps:
      - uses: actions/checkout@v3
      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval $(/usr/local/bin/brew shellenv)' >> $HOME/.zprofile
          eval $(/usr/local/bin/brew shellenv)
  
      - name: Install Bash with Homebrew
        run: brew install bash
  
      - name: Update Shell Configuration
        run: echo 'export PATH="/usr/local/bin:$PATH"' >> $HOME/.zprofile && exec -l $SHELL
  
      - name: Verify Bash Version
        run: /usr/local/bin/bash --version

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdkver || env.jdkver_latest }}
      - name: Run
        run: | 
          export OJDK_VERSION_NUMBER=${{ matrix.jdkver || env.jdkver_latest }} BOOTJDK_DIR=~/bootjdk JREJDK="jdk" WORKSPACE=/Users/runner/workspace XDISPLAY=":0"
          /usr/local/bin/bash testHeadlessComponents.sh
      - name: Pack results
        if: ${{ always() }}
        run: |
          export WORKSPACE=/Users/runner/workspace
          tar -cf "results-macos-jdk${{ matrix.jdkver || env.jdkver_latest }}.tar.gz" $WORKSPACE/testHeadlessComponent.log $WORKSPACE/testHeadlessComponent.jtr.xml
      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          path: "results-macos-jdk${{ matrix.jdkver || env.jdkver_latest }}.tar.gz"
        continue-on-error: true


